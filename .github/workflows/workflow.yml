name: Daily BotAPI Build

on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout empty repo
      uses: actions/checkout@v4

    - name: Clone source code
      run: git clone --recursive https://github.com/tdlight-team/tdlight-telegram-bot-api.git

    - name: Setup build environment
      shell: pwsh
      working-directory: ./tdlight-telegram-bot-api
      run: |
        # 安装vcpkg并设置环境变量
        git clone https://github.com/microsoft/vcpkg
        cd vcpkg
        ./bootstrap-vcpkg.bat -disableMetrics
        $vcpkgRoot = Resolve-Path .
        echo "VCPKG_ROOT=$vcpkgRoot" >> $env:GITHUB_ENV
        ./vcpkg integrate install
        ./vcpkg install --triplet x64-windows gperf openssl zlib
        
        # 将gperf添加到PATH
        $gperfPath = Join-Path $vcpkgRoot "installed\x64-windows\tools\gperf"
        echo "$gperfPath" >> $env:GITHUB_PATH

    - name: Configure CMake
      shell: pwsh
      working-directory: ./tdlight-telegram-bot-api
      run: |
        Remove-Item -Path build -Recurse -Force -ErrorAction SilentlyContinue
        New-Item -Path build -ItemType Directory
        
        cmake -G "Visual Studio 17 2022" -A x64 `
          -DCMAKE_TOOLCHAIN_FILE="$env:VCPKG_ROOT/scripts/buildsystems/vcpkg.cmake" `
          -DCMAKE_INSTALL_PREFIX=../install `
          -DGPERF_EXECUTABLE="$env:VCPKG_ROOT/installed/x64-windows/tools/gperf/gperf.exe" `
          -DZLIB_ROOT="$env:VCPKG_ROOT/installed/x64-windows" `
          -B build `
          -S .

    - name: Build project
      shell: pwsh
      working-directory: ./tdlight-telegram-bot-api/build
      run: cmake --build . --config Release --target install -- /m

    - name: Verify binaries
      shell: pwsh
      run: Get-ChildItem -Recurse tdlight-telegram-bot-api

    - name: Create release package
      shell: pwsh
      run: |
        $date = Get-Date -Format "yyyyMMdd"
        $binDir = "tdlight-telegram-bot-api/build/bin"
        Compress-Archive -Path "$binDir/*" -DestinationPath "botapi-$date.zip"

    - name: Upload release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: nightly-$(date -u +'%Y%m%d')
        name: Nightly Build $(date -u +'%Y-%m-%d')
        files: botapi-*.zip
        draft: false
        prerelease: true
        overwrite: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
